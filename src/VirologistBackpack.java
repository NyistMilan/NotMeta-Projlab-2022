//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : VirologistBackpack.java
//  @ Date : 2022. 03. 23.
//  @ Author : 
//
//


import java.util.ArrayList;

/** */
public class VirologistBackpack extends Backpack {
	VirologistBackpack(){
		super();
		capacity = 20;
		agents = new ArrayList<>();
		appliedAgents = new ArrayList<>();
	}
	/** */
	private int capacity;

	/** */
	private ArrayList<Agent> agents;
	
	/** */
	private ArrayList<Agent> appliedAgents;
	
	/** */
	public void Add(Equipment e) {
		Skeleton.methodCall(this, "e");
		Skeleton.methodReturn(this);
	}
	
	/** */
	public void Add(Agent a) {
		Skeleton.methodCall(this, "a");
		agents.add(a);
		Skeleton.methodReturn(this);
	}
	
	/** */
	public void AddApplied(Agent a) {
		Skeleton.methodCall(this, "a");
		appliedAgents.add(a);
		Skeleton.methodReturn(this);
	}
	
	/** */
	public ArrayList<Agent> GetAgents() {
		Skeleton.methodCall(this);
		Skeleton.methodReturn(this);
		return agents;
	}
	
	/** */
	public ArrayList<Agent> GetAppliedAgents() {
		Skeleton.methodCall(this);
		Skeleton.methodReturn(this);
		return appliedAgents;
	}
	
	/** */
	public void Remove(Agent a) {
		Skeleton.methodCall(this, "a");
		agents.remove(a);
		Skeleton.methodReturn(this);
	}
	
	/** */
	public void RemoveApplied(Agent a) {
		Skeleton.methodCall(this, "a");
		appliedAgents.remove(a);
		Skeleton.methodReturn(this);
	}
	
	/** */
	public void Remove(Equipment e) {
		Skeleton.methodCall(this, "e");
		Skeleton.methodReturn(this);
	}
	
	/** */
	public void DecreaseWarranties() {
		Skeleton.methodCall(this);
		for(Agent a: agents){
			int w = a.DecreaseWarranty();
			if(w == 0){
				Remove(a);
			}
		}
		for(Agent a: appliedAgents){
			int d = a.DecreaseDuration();
			if(d == 0){
				RemoveApplied(a);
			}
		}
		Skeleton.methodReturn(this);
	}
	
	/** */
	public boolean EnoughMaterials(int a, int n) {
		Skeleton.methodCall(this, "a", "n");
		boolean isenough = Skeleton.yesOrNoInput("Has enough materials?");
		Skeleton.methodReturn(this);
		return isenough;
	}

	public int getCapacity() {
		return capacity;
	}

	public void setCapacity(int capacity) {
		int aminoBonus = aminoacids.size() - capacity;
		while(aminoBonus > 0){
			Remove(aminoacids.remove(aminoacids.size()-1));
			aminoBonus = aminoacids.size() - capacity;
		}
		int nucleoBonus = nucleotids.size() - capacity;
		while(nucleoBonus > 0){
			Remove(nucleotids.remove(nucleotids.size()-1));
			nucleoBonus = nucleotids.size() - capacity;
		}
		this.capacity = capacity;
	}
}
