package collectables.agent;

//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : collectables.agent.Agent.java
//  @ Date : 2022. 03. 23.
//  @ Author : 
//
//
import collectables.*;
import main.Skeleton;
import assets.virologist.Virologist;
import assets.*;

/** A field.virologist.Virologist can use a collectables.agent.Agent to infect another field.virologist.Virologist (or himself).*/
public abstract class Agent implements Collectable {

	/**
	 * Gets the duration of the collectables.agent.Agent
	 * @return the duration
	 */
	public abstract int getDuration();

	/**
	 * Sets the duration of the collectables.agent.Agent
	 * @param duration the duration
	 */
	public abstract void setDuration(int duration);

	/**
	 * Gets the warranty of the collectables.agent.Agent
	 * @return the warranty
	 */
	public abstract int getWarranty();

	/**
	 * Sets the warranty of the collectables.agent.Agent
	 * @param warranty the warranty
	 */
	public abstract void setWarranty(int warranty);

	public int DecreaseWarranty() {
		Skeleton.methodCall(this);
		setWarranty(getWarranty() - 1);
		Skeleton.printWithIndent("Warranty:" + getWarranty());
		Skeleton.methodReturn(this);
		return getWarranty();
	}

	public int DecreaseDuration() {
		Skeleton.methodCall(this);
		setDuration(getDuration() - 1);
		Skeleton.printWithIndent("Duration:" + getDuration());
		Skeleton.methodReturn(this);
		return getDuration();
	}
	
	/**
	 * Applies the effects of the collectables.agent.Agent to a field.virologist.Virologist
	 *
	 * @param v the field.virologist.Virologist the collectables.agent.Agent gets applied to
	 * */
	public abstract void Apply(Virologist v);
	
	/**
	 * Removes the effects of the collectables.agent.Agent from a field.virologist.Virologist
	 *
	 * @param v the field.virologist.Virologist the collectables.agent.Agent gets removed from
	 * */
	public void Remove(Virologist v) {
		Skeleton.methodCall(this, "v");
		v.RefreshEffects();
		Skeleton.methodReturn(this);
	}

	/**
	 * Adds the collectables.agent.Agent to a field.virologist.Virologist's field.Backpack
	 *
	 * @param v the field.virologist.Virologist
	 * @param b the field.Backpack
	 * @return true if the adding was successful, false if the adding failed
	 */
	@Override
	public boolean AddToBackpack(Virologist v, Backpack b) {
		Skeleton.methodCall(this, "v", "b");
		boolean isAdded = v.GetBackpack().Add(this);
		Skeleton.methodReturn(this);
		return isAdded;
	}

	/**
	 * Removes the collectables.agent.Agent from a field.virologist.Virologist's field.Backpack
	 *
	 * @param v the field.virologist.Virologist
	 * @param b the field.Backpack
	 */
	@Override
	public void RemoveFromBackpack(Virologist v, Backpack b) {
		Skeleton.methodCall(this, "v","b");
		v.GetBackpack().Remove(this);
		Skeleton.methodReturn(this);
	}

	public abstract String GetName();
}
